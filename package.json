{
  "name": "kuark-extensions",
  "version": "0.0.23",
  "description": "Kuark application's extensions",
  "main": "index.js",
  "directories": {
    "test": "test",
    "src": "src"
  },
  "config": {
    "___Nasıl": "user could change the behavior by doing: npm config set foo:port 80, process.env.npm_package_config_port",
    "port": "3000"
  },
  "scripts": {
    "yorumlar": "Testin öncesinde (pretest) ekranı temizleyelim cls ile... Test aşamasında watch ile src ve test klasörlerindeki değişimleri takip ederek 'npm run test'' çalışacak... Testin ardından(posttest) eslint yapalımki esas kodu geliştirmede zaman harcamayıp, güzelleştirmeyi peşine bırakmış olalım.",
    "_______________________________________________________________ ESLINT": "___________",
    "eslint": "eslint src/**/*.js",
    "eslint:w": "esw --watch src/**/*.js",
    "w:eslint": "watch \"npm run eslint\" ./src/ ./test/",
    "_______________________________________________________________ MOCHA": "____________",
    "mocha": "mocha test/**/*.js --colors --reporter spec",
    "mocha:w": "mocha test/**/*.js --colors --reporter spec --watch",
    "w:mocha": "watch \"npm run mocha\" ./src/ ./test/",
    "_______________________________________________________________ TEST": "_____________",
    "__yardim": "http://www.marcusoft.net/2015/08/npm-scripting-git-version-and-deploy.html",
    "pretest": "rm -rf nmp-debug.log",
    "test": "npm run mocha",
    "posttest": "npm run eslint",
    "test:c": "parallelshell \"npm run mocha:w\" \"npm run eslint:w\"",
    "test:w": "watch \"npm run test\" ./src/ ./test/",
    "_______________________________________________________________ DEVELOPMENT": "______",
    "prebuild": "npm run test",
    "build": "parallelshell 'npm run watch:test",
    "postbuild": "",
    "_______________________________________________________________ VERSION": "__________",
    "preversion": "npm run test",
    "version": "git add -A && git commit -m\"Versiyon yapılacak\"",
    "postversion": "git push && git push --tags && npm publish && npm run update:all",
    "version:patch": "npm version patch  -m \" %s Versiyonu yapıldı\" --no-git-tag-version",
    "version:minor": "npm version minor",
    "version:major": "npm version major",
    "vp": "npm run version:patch",
    "_______________________________________________________________ GIT": "_____________",
    "git:add": "git add -A",
    "git:commit": "git commit -m \"Otomatik mesaj\"",
    "git:push": "git push",
    "git:AC": "npm run git:add && npm run git:commit",
    "git:ACP": "npm run git:add && npm run git:commit && npm run git:push",
    "_______________________________________________________________ PUBLISH": "__________",
    "prepublish": "",
    "publish": "",
    "postpublish": "",
    "_______________________________________________________________ UPDATE KUARK PACKAGES": "__________",
    "update:all": "npm run update-kuark-api && npm run update-kuark-batch && npm run update-kuark-db && npm run update-kuark-istisna && npm run update-kuark-schema && npm run update-kuark-app",
    "update-kuark-app": "ncu /^kuark-/ -u --packageFile ../../App/package.json && cd ../../App && npm update kuark-extensions",
    "update-kuark-api": "ncu /^kuark-/ -u --packageFile ../kuark-api/package.json && cd ../kuark-api && npm update kuark-extensions",
    "update-kuark-batch": "ncu /^kuark-/ -u --packageFile ../kuark-batch/package.json && cd ../kuark-batch && npm update kuark-extensions",
    "update-kuark-db": "ncu /^kuark-/ -u --packageFile ../kuark-db/package.json && cd ../kuark-db && npm update kuark-extensions",
    "update-kuark-istisna": "ncu /^kuark-/ -u --packageFile ../kuark-istisna/package.json && cd ../kuark-istisna && npm update kuark-extensions",
    "update-kuark-schema": "ncu /^kuark-/ -u --packageFile ../kuark-schema/package.json && cd ../kuark-schema && npm update kuark-extensions"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cemtopkaya/kuark-extensions.git"
  },
  "author": "Cem Topkaya <'cem.topkaya@hotmail.com'> (http://Cem.Topkaya.com)",
  "license": "MIT",
  "devDependencies": {
    "chai": "3.5.0",
    "eslint": "2.5.1",
    "eslint-config-standard": "5.1.0",
    "eslint-watch": "2.1.10",
    "json-schema-defaults": "^0.1.1",
    "mocha": "2.4.5",
    "parallelshell": "2.0.0",
    "supertest": "^1.2.0",
    "watch": "0.17.1"
  },
  "dependencies": {
    "emailjs": "^1.0.4",
    "lodash": "^4.7.0",
    "moment": "^2.12.0",
    "q": "1.4.1",
    "redis": "2.5.3",
    "winston": "^2.2.0",
    "winston-elasticsearch": "^0.2.6",
    "winston-redis": "^1.0.0"
  }
}
